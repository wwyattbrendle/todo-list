(()=>{"use strict";var r={28:(r,n,e)=>{e.d(n,{Z:()=>p});var t=e(537),o=e.n(t),i=e(645),a=e.n(i),A=e(667),d=e.n(A),s=new URL(e(107),e.b),c=a()(o()),l=d()(s);c.push([r.id,"@font-face{\r\n    font-family: custom;\r\n    src: url("+l+");\r\n}\r\n\r\n*{\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: custom, Georgia, 'Times New Roman', Times, serif;\r\n}\r\n\r\n:root{\r\n    --dark-background: rgb(0, 11, 20);\r\n    --light-background: rgb(0, 18, 32);\r\n    --highlight-color: #187cc9;\r\n    --light-blue: rgb(63, 207, 207);\r\n    --shadow: 0px 0px 5px 3px var(--highlight-color);\r\n}\r\n\r\nbody{\r\n    height: 100vh;\r\n    width: 100vw;\r\n    display: flex;\r\n    justify-content: center;\r\n    background-color: var(--dark-background);\r\n}\r\n\r\ndiv#wrapper{\r\n    height: 100%;\r\n    width: min(100%, 1300px);\r\n    display: grid;\r\n    grid-template-columns: min(35%, 400px) calc(100% - min(35%, 400px));\r\n    grid-template-rows: 15% 85%;\r\n    border: solid 1px var(--highlight-color);\r\n    box-shadow: var(--shadow);\r\n}\r\n\r\ndiv#header{\r\n    grid-area: 1 / 1 / 2 / 3;\r\n    background-color: var(--highlight-color);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 40px;\r\n}\r\n\r\ndiv#side-bar{\r\n    grid-area: 2 / 1 / 3 / 2;\r\n    background-color: var(--light-background);\r\n    color: whitesmoke;\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\nform#project-form{\r\n    width: 100%;\r\n    padding: 10px;\r\n}\r\n\r\nform#project-form > fieldset{\r\n    border: none;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 30px;\r\n    width: 100%;\r\n}\r\n\r\nform#project-form > fieldset > legend{\r\n    font-size: 32px;\r\n}\r\n\r\ndiv.form-input{\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n}\r\n\r\ntextarea#description{\r\n    /* -5px makes the right side of box line up correctly \r\n    not sure why this is*/\r\n\r\n    width: calc(100% - 5px);\r\n}\r\n\r\ndiv#form-button-container{\r\n    display: flex;\r\n    justify-content: flex-end;\r\n}\r\n\r\nbutton.submit{\r\n    height: 30px;\r\n    width: 80px;\r\n    background-color: var(--light-blue);\r\n    border: var(--highlight-color) solid 1px;\r\n    border-radius: 30px;\r\n    box-shadow: var(--shadow);\r\n}\r\n\r\ndiv#content{\r\n    grid-area: 2 / 2 / 3 / 3;\r\n    background-color: var(--dark-background);\r\n    padding: 20px;\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n    grid-auto-rows: 300px;\r\n    gap: 20px;\r\n    overflow: scroll;\r\n    scrollbar-width: none;\r\n}\r\n\r\ndiv.project{\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    padding: 15px;\r\n    color: whitesmoke;\r\n    background-color: var(--light-background);\r\n    border: var(--highlight-color);\r\n    box-shadow: var(--shadow);\r\n    border-radius: 3px;\r\n}\r\n\r\ndiv.project.high{\r\n    border: solid 2px crimson;\r\n}\r\n\r\ndiv.project.medium{\r\n    border: solid 2px gold;\r\n}\r\n\r\ndiv.project.complete{\r\n    border: solid 2px greenyellow;\r\n}\r\n\r\ndiv.project > h3.p-title{\r\n    text-align: center;\r\n    font-size: 22px;\r\n}\r\n\r\ndiv.form-edit {\r\n    position: absolute;\r\n    background-color: var(--dark-background);\r\n    color: whitesmoke;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    padding: 20px;\r\n    border: solid 3px var(--highlight-color);\r\n    box-shadow: var(--shadow);\r\n    width: 500px;\r\n    display: none;\r\n}\r\n\r\nform.project-edit > fieldset {\r\n    border: none;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 30px;\r\n    width: 100%;\r\n}\r\n\r\nform.project-edit > fieldset > legend {\r\n    font-size: 32px;\r\n    text-align: center;\r\n}\r\n\r\nbutton.delete{\r\n    height: 30px;\r\n    width: 80px;\r\n    background-color: crimson;\r\n    color: whitesmoke;\r\n    border: crimson solid 2px;\r\n    border-radius: 30px;\r\n    box-shadow: var(--shadow);\r\n}\r\n\r\ndiv#edit-button-container{\r\n    display: flex;\r\n    justify-content: space-between;\r\n}\r\n\r\ndiv.project-view{\r\n    position: absolute;\r\n    background-color: var(--dark-background);\r\n    color: whitesmoke;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    border: solid 3px greenyellow;\r\n    box-shadow:  0px 0px 5px 3px greenyellow;\r\n    width: 400px;\r\n    height: 600px;\r\n    display: grid;\r\n    grid-template-rows: 1fr 5fr;\r\n}\r\n\r\ndiv.project-view > .project-header{\r\n    grid-row: 1 / 2;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    height: 50px;\r\n    align-items: center;\r\n    background-color: var(--light-background);\r\n    padding: 20px;\r\n    padding-right: 25px;\r\n    padding-top: 25px;\r\n}\r\n\r\n.project-header > h2.project-title{\r\n    font-size: 25px;\r\n}\r\n\r\n.project-view > div.todo-list-container{\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap: 20px;\r\n    padding: 20px;\r\n}\r\n\r\ndiv.tasks{\r\n    display: grid;\r\n    gap: 18px;\r\n    overflow: scroll;\r\n    height: 360px;\r\n    grid-template-rows: repeat(auto-fill, 50px);\r\n}\r\n\r\ndiv.todo{\r\n    display: flex;\r\n    gap: 30px;\r\n    background-color: var(--highlight-color);\r\n    padding: 10px;\r\n    border: dashed whitesmoke 1px;\r\n    border-radius: 5px;\r\n    width: 340px;\r\n    align-items: center;\r\n}\r\n\r\ndiv.todo > p{\r\n    width: 80%;\r\n    \r\n}div.project-date {\r\n    text-align: center;\r\n}\r\n\r\nbutton.close {\r\n    position: absolute;\r\n    width: 20px;\r\n    height: 20px;\r\n    border-radius: 20px;\r\n    color: whitesmoke;\r\n    background-color: crimson;\r\n    border: 1px solid crimson;\r\n    right: 5px;\r\n    top: 5px;\r\n}\r\n\r\ninput.input-project-view{\r\n    margin: 5px;\r\n}","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"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",sourcesContent:["@font-face{\r\n    font-family: custom;\r\n    src: url(./fonts/Prompt-Regular.ttf);\r\n}\r\n\r\n*{\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: custom, Georgia, 'Times New Roman', Times, serif;\r\n}\r\n\r\n:root{\r\n    --dark-background: rgb(0, 11, 20);\r\n    --light-background: rgb(0, 18, 32);\r\n    --highlight-color: #187cc9;\r\n    --light-blue: rgb(63, 207, 207);\r\n    --shadow: 0px 0px 5px 3px var(--highlight-color);\r\n}\r\n\r\nbody{\r\n    height: 100vh;\r\n    width: 100vw;\r\n    display: flex;\r\n    justify-content: center;\r\n    background-color: var(--dark-background);\r\n}\r\n\r\ndiv#wrapper{\r\n    height: 100%;\r\n    width: min(100%, 1300px);\r\n    display: grid;\r\n    grid-template-columns: min(35%, 400px) calc(100% - min(35%, 400px));\r\n    grid-template-rows: 15% 85%;\r\n    border: solid 1px var(--highlight-color);\r\n    box-shadow: var(--shadow);\r\n}\r\n\r\ndiv#header{\r\n    grid-area: 1 / 1 / 2 / 3;\r\n    background-color: var(--highlight-color);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 40px;\r\n}\r\n\r\ndiv#side-bar{\r\n    grid-area: 2 / 1 / 3 / 2;\r\n    background-color: var(--light-background);\r\n    color: whitesmoke;\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\nform#project-form{\r\n    width: 100%;\r\n    padding: 10px;\r\n}\r\n\r\nform#project-form > fieldset{\r\n    border: none;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 30px;\r\n    width: 100%;\r\n}\r\n\r\nform#project-form > fieldset > legend{\r\n    font-size: 32px;\r\n}\r\n\r\ndiv.form-input{\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n}\r\n\r\ntextarea#description{\r\n    /* -5px makes the right side of box line up correctly \r\n    not sure why this is*/\r\n\r\n    width: calc(100% - 5px);\r\n}\r\n\r\ndiv#form-button-container{\r\n    display: flex;\r\n    justify-content: flex-end;\r\n}\r\n\r\nbutton.submit{\r\n    height: 30px;\r\n    width: 80px;\r\n    background-color: var(--light-blue);\r\n    border: var(--highlight-color) solid 1px;\r\n    border-radius: 30px;\r\n    box-shadow: var(--shadow);\r\n}\r\n\r\ndiv#content{\r\n    grid-area: 2 / 2 / 3 / 3;\r\n    background-color: var(--dark-background);\r\n    padding: 20px;\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n    grid-auto-rows: 300px;\r\n    gap: 20px;\r\n    overflow: scroll;\r\n    scrollbar-width: none;\r\n}\r\n\r\ndiv.project{\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    padding: 15px;\r\n    color: whitesmoke;\r\n    background-color: var(--light-background);\r\n    border: var(--highlight-color);\r\n    box-shadow: var(--shadow);\r\n    border-radius: 3px;\r\n}\r\n\r\ndiv.project.high{\r\n    border: solid 2px crimson;\r\n}\r\n\r\ndiv.project.medium{\r\n    border: solid 2px gold;\r\n}\r\n\r\ndiv.project.complete{\r\n    border: solid 2px greenyellow;\r\n}\r\n\r\ndiv.project > h3.p-title{\r\n    text-align: center;\r\n    font-size: 22px;\r\n}\r\n\r\ndiv.form-edit {\r\n    position: absolute;\r\n    background-color: var(--dark-background);\r\n    color: whitesmoke;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    padding: 20px;\r\n    border: solid 3px var(--highlight-color);\r\n    box-shadow: var(--shadow);\r\n    width: 500px;\r\n    display: none;\r\n}\r\n\r\nform.project-edit > fieldset {\r\n    border: none;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 30px;\r\n    width: 100%;\r\n}\r\n\r\nform.project-edit > fieldset > legend {\r\n    font-size: 32px;\r\n    text-align: center;\r\n}\r\n\r\nbutton.delete{\r\n    height: 30px;\r\n    width: 80px;\r\n    background-color: crimson;\r\n    color: whitesmoke;\r\n    border: crimson solid 2px;\r\n    border-radius: 30px;\r\n    box-shadow: var(--shadow);\r\n}\r\n\r\ndiv#edit-button-container{\r\n    display: flex;\r\n    justify-content: space-between;\r\n}\r\n\r\ndiv.project-view{\r\n    position: absolute;\r\n    background-color: var(--dark-background);\r\n    color: whitesmoke;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    border: solid 3px greenyellow;\r\n    box-shadow:  0px 0px 5px 3px greenyellow;\r\n    width: 400px;\r\n    height: 600px;\r\n    display: grid;\r\n    grid-template-rows: 1fr 5fr;\r\n}\r\n\r\ndiv.project-view > .project-header{\r\n    grid-row: 1 / 2;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    height: 50px;\r\n    align-items: center;\r\n    background-color: var(--light-background);\r\n    padding: 20px;\r\n    padding-right: 25px;\r\n    padding-top: 25px;\r\n}\r\n\r\n.project-header > h2.project-title{\r\n    font-size: 25px;\r\n}\r\n\r\n.project-view > div.todo-list-container{\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap: 20px;\r\n    padding: 20px;\r\n}\r\n\r\ndiv.tasks{\r\n    display: grid;\r\n    gap: 18px;\r\n    overflow: scroll;\r\n    height: 360px;\r\n    grid-template-rows: repeat(auto-fill, 50px);\r\n}\r\n\r\ndiv.todo{\r\n    display: flex;\r\n    gap: 30px;\r\n    background-color: var(--highlight-color);\r\n    padding: 10px;\r\n    border: dashed whitesmoke 1px;\r\n    border-radius: 5px;\r\n    width: 340px;\r\n    align-items: center;\r\n}\r\n\r\ndiv.todo > p{\r\n    width: 80%;\r\n    \r\n}div.project-date {\r\n    text-align: center;\r\n}\r\n\r\nbutton.close {\r\n    position: absolute;\r\n    width: 20px;\r\n    height: 20px;\r\n    border-radius: 20px;\r\n    color: whitesmoke;\r\n    background-color: crimson;\r\n    border: 1px solid crimson;\r\n    right: 5px;\r\n    top: 5px;\r\n}\r\n\r\ninput.input-project-view{\r\n    margin: 5px;\r\n}"],sourceRoot:""}]);const p=c},645:r=>{r.exports=function(r){var n=[];return n.toString=function(){return this.map((function(n){var e="",t=void 0!==n[5];return n[4]&&(e+="@supports (".concat(n[4],") {")),n[2]&&(e+="@media ".concat(n[2]," {")),t&&(e+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),e+=r(n),t&&(e+="}"),n[2]&&(e+="}"),n[4]&&(e+="}"),e})).join("")},n.i=function(r,e,t,o,i){"string"==typeof r&&(r=[[null,r,void 0]]);var a={};if(t)for(var A=0;A<this.length;A++){var d=this[A][0];null!=d&&(a[d]=!0)}for(var s=0;s<r.length;s++){var c=[].concat(r[s]);t&&a[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),e&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=e):c[2]=e),o&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=o):c[4]="".concat(o)),n.push(c))}},n}},667:r=>{r.exports=function(r,n){return n||(n={}),r?(r=String(r.__esModule?r.default:r),/^['"].*['"]$/.test(r)&&(r=r.slice(1,-1)),n.hash&&(r+=n.hash),/["'() \t\n]|(%20)/.test(r)||n.needQuotes?'"'.concat(r.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):r):r}},537:r=>{r.exports=function(r){var n=r[1],e=r[3];if(!e)return n;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),i="/*# ".concat(o," */");return[n].concat([i]).join("\n")}return[n].join("\n")}},379:r=>{var n=[];function e(r){for(var e=-1,t=0;t<n.length;t++)if(n[t].identifier===r){e=t;break}return e}function t(r,t){for(var i={},a=[],A=0;A<r.length;A++){var d=r[A],s=t.base?d[0]+t.base:d[0],c=i[s]||0,l="".concat(s," ").concat(c);i[s]=c+1;var p=e(l),u={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var h=o(u,t);t.byIndex=A,n.splice(A,0,{identifier:l,updater:h,references:1})}a.push(l)}return a}function o(r,n){var e=n.domAPI(n);return e.update(r),function(n){if(n){if(n.css===r.css&&n.media===r.media&&n.sourceMap===r.sourceMap&&n.supports===r.supports&&n.layer===r.layer)return;e.update(r=n)}else e.remove()}}r.exports=function(r,o){var i=t(r=r||[],o=o||{});return function(r){r=r||[];for(var a=0;a<i.length;a++){var A=e(i[a]);n[A].references--}for(var d=t(r,o),s=0;s<i.length;s++){var c=e(i[s]);0===n[c].references&&(n[c].updater(),n.splice(c,1))}i=d}}},569:r=>{var n={};r.exports=function(r,e){var t=function(r){if(void 0===n[r]){var e=document.querySelector(r);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(r){e=null}n[r]=e}return n[r]}(r);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},216:r=>{r.exports=function(r){var n=document.createElement("style");return r.setAttributes(n,r.attributes),r.insert(n,r.options),n}},565:(r,n,e)=>{r.exports=function(r){var n=e.nc;n&&r.setAttribute("nonce",n)}},795:r=>{r.exports=function(r){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=r.insertStyleElement(r);return{update:function(e){!function(r,n,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,o&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(t,r,n.options)}(n,r,e)},remove:function(){!function(r){if(null===r.parentNode)return!1;r.parentNode.removeChild(r)}(n)}}}},589:r=>{r.exports=function(r,n){if(n.styleSheet)n.styleSheet.cssText=r;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(r))}}},107:(r,n,e)=>{r.exports=e.p+"e90fcfc620f3d9f3ccd4.ttf"}},n={};function e(t){var o=n[t];if(void 0!==o)return o.exports;var i=n[t]={id:t,exports:{}};return r[t](i,i.exports,e),i.exports}e.m=r,e.n=r=>{var n=r&&r.__esModule?()=>r.default:()=>r;return e.d(n,{a:n}),n},e.d=(r,n)=>{for(var t in n)e.o(n,t)&&!e.o(r,t)&&Object.defineProperty(r,t,{enumerable:!0,get:n[t]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(r){if("object"==typeof window)return window}}(),e.o=(r,n)=>Object.prototype.hasOwnProperty.call(r,n),(()=>{var r;e.g.importScripts&&(r=e.g.location+"");var n=e.g.document;if(!r&&n&&(n.currentScript&&(r=n.currentScript.src),!r)){var t=n.getElementsByTagName("script");if(t.length)for(var o=t.length-1;o>-1&&!r;)r=t[o--].src}if(!r)throw new Error("Automatic publicPath is not supported in this browser");r=r.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=r})(),e.b=document.baseURI||self.location.href,e.nc=void 0,(()=>{var r=e(379),n=e.n(r),t=e(795),o=e.n(t),i=e(569),a=e.n(i),A=e(565),d=e.n(A),s=e(216),c=e.n(s),l=e(589),p=e.n(l),u=e(28),h={};h.styleTagTransform=p(),h.setAttributes=d(),h.insert=a().bind(null,"head"),h.domAPI=o(),h.insertStyleElement=c(),n()(u.Z,h),u.Z&&u.Z.locals&&u.Z.locals;const C=function(){const r=document.getElementById("content");return{appendBody:r=>{document.body.appendChild(r)},appendContent:n=>{r.appendChild(n)},unappendBody:r=>{document.body.removeChild(r)},unappendContent:n=>{r.removeChild(n)}}}(),g=function(r){const n=document.createElement("div");n.classList.add("todo");const e=document.createElement("input");e.setAttribute("type","checkbox");const t=document.createElement("p");return t.textContent=r,n.appendChild(e),n.appendChild(t),n};class m{constructor(r,n,e,t,o){this._title=r,this._date=n,this._description=e,this._priority=t,this._index=o,this._tasks=[]}get title(){return this._title}set title(r){r&&(this._title=r)}get date(){return this._date}set date(r){r&&(this._date=r)}get description(){return this._description}set description(r){r&&(this._description=r)}get priority(){return this._priority}set priority(r){r&&(this._priority=r)}get tasks(){return this._tasks}get index(){return this._index}addTask=function(r){this._tasks.push(r)};add=function(){x.push(this),console.log(x)}}const x=[];class f{constructor(r,n,e,t,o){this.title=r,this.date=n,this.description=e,this.priority=t,this.index=o}createElement=function(){const r=document.createElement("div");r.classList.add("project-view");const n=document.createElement("div");n.classList.add("project-header");const e=document.createElement("h2");e.classList.add("project-title"),e.textContent=this.title;const t=document.createElement("button");t.classList.add("edit"),t.textContent="edit";const o=document.createElement("button");o.classList.add("close"),o.textContent="X",n.appendChild(e),n.appendChild(t),n.appendChild(o);const i=document.createElement("div");i.classList.add("project-date"),i.textContent=`Due: ${this.date}`;const a=document.createElement("input");a.setAttribute("type","text"),a.setAttribute("placeholder","Add task here"),a.classList.add("input-project-view");const A=document.createElement("div");A.classList.add("todo-list-container");const d=document.createElement("button");d.classList.add("add"),d.textContent="Add Task";const s=document.createElement("div");s.classList.add("tasks"),A.appendChild(d),A.appendChild(s),r.appendChild(n),r.appendChild(i),r.appendChild(a),r.appendChild(A),o.addEventListener("click",(function(){C.unappendBody(r),console.log(x[c].tasks)}));let c=this.index;if(d.addEventListener("click",(function(){a.value&&(s.appendChild(g(a.value)),x[c].addTask(a.value))})),x[c].tasks.length>0)for(let r=0;r<x[c].tasks.length;r++)s.appendChild(g(x[c].tasks[r]));return r}}class B{constructor(r,n,e,t,o){this.title=r,this.date=n,this.description=e,this.priority=t,this.index=o}createElement=function(){const r=document.createElement("div");r.classList.add("project");const n=document.createElement("h3");n.textContent=this.title,n.classList.add("p-title");const e=document.createElement("p");e.textContent=this.description,e.classList.add("p-description");const t=document.createElement("button");t.textContent="view",t.classList.add("p-button"),r.appendChild(n),r.appendChild(e),r.appendChild(t),"medium"===this.priority?r.classList.add("medium"):"high"===this.priority&&r.classList.add("high");let o=this.index;return t.addEventListener("click",(function(){const r=new f(x[o].title,x[o].date,x[o].description,x[o].priority,o);C.appendBody(r.createElement())})),r};log=function(){console.log(this.title),console.log(this.date),console.log(this.index)}}const I=function(){const r=document.getElementById("project-form"),n=document.getElementById("title"),e=document.getElementById("due-date"),t=document.getElementById("description"),o=document.getElementById("priority");return{title:n,form:r,dueDate:e,description:t,priority:o,resetForm:()=>{n.value="",e.value="",t.value="",o.value="low"},getIndex:()=>x.length}}();I.form.addEventListener("submit",(function(r){r.preventDefault();const n=new m(I.title.value,I.dueDate.value,I.description.value,I.priority.value,I.getIndex());let e=I.getIndex();n.add();const t=new B(x[e].title,x[e].date,x[e].description,x[e].priority,x[e].index);t.log(),C.appendContent(t.createElement()),I.resetForm()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,